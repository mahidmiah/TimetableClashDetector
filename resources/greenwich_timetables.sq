CREATE TABLE course_types ( 
   id_course_type INTEGER PRIMARY KEY, 
   label TEXT NOT NULL 
); 
 
INSERT INTO course_types (label) 
VALUES ('undergraduate'), ('postgraduate'); 
 
CREATE TABLE courses ( 
  id_course INTEGER PRIMARY KEY,
  name TEXT, 
  start_year INTEGER, 
  end_year INTEGER, 
  id_course_type INTEGER, 
  FOREIGN KEY(id_course_type) REFERENCES course_types(id_course_type) 
); 
 
CREATE TABLE timetables ( 
  id_timetable INTEGER PRIMARY KEY,
  id_course INTEGER, 
  FOREIGN KEY(id_course) REFERENCES courses(id_course) 
); 
 
CREATE TABLE modules ( 
    id_module INTEGER PRIMARY KEY,
    code TEXT NOT NULL, -- COMP1810 
    name TEXT NOT NULL -- COMP1810-JVM Programming Languages 
); 
 
CREATE UNIQUE INDEX modules_code ON modules(code); 
 
 
 
CREATE TABLE activity_categories ( 
    id_act_category INTEGER PRIMARY KEY,
    label TEXT -- Lecture,Tutorial 
); 
 
INSERT INTO activity_categories (label) 
VALUES ('lecture'), ('tutorial'); 
 
CREATE TABLE course_modules ( 
  id_course_module INTEGER PRIMARY KEY,
  id_module INTEGER, 
  id_course INTEGER, 
  is_optional INTEGER, -- 0 or 1 
  available_year INTEGER, 
  FOREIGN KEY(id_module) REFERENCES modules(id_module), 
  FOREIGN KEY(id_course) REFERENCES courses(id_course) 
); 
 
CREATE TABLE users ( 
  id_user INTEGER PRIMARY KEY,
  email TEXT, 
  first_name TEXT, 
  last_name TEXT, 
  passw TEXT 
);

INSERT INTO users (email, first_name, last_name, passw)
VALUES ("example@gmail.com", "John", "Doe",
"daef4953b9783365cad6615223720506cc46c5167cd16ab500fa597aa08ff964eb24fb19687f34d7665f778fcb6c5358fc0a5b81e1662cf90f73a2671c53f991");
-- test123
 
CREATE TABLE activities ( 
  id_activity INTEGER PRIMARY KEY,
  id_act_category INTEGER, 
  id_course_module INTEGER, 
  day_week INTEGER, -- 0 to 4 (0=Monday, 1=Tuesday, 2=Wednesday,3=Thursday,4=Friday)
  act_starttime REAL, -- 9.0, 9.5, 10.0
  act_endtime REAL,
  term INTEGER,
  week INTEGER ,
  posted_by INTEGER, 
  FOREIGN KEY(id_act_category) REFERENCES activity_categories(id_act_category),
  FOREIGN KEY(id_course_module) REFERENCES course_modules(id_course_module),
  FOREIGN KEY(posted_by) REFERENCES users(id_user)
);
